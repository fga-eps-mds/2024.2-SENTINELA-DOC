{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"pages/","text":"Projeto Sentinela - 2024.2 O Sentinela \u00e9 um projeto criado para o Sindicato dos Policiais do Distrito Federal (SINDPOL-DF) e conta com o desenvolvimento um sistema web focado na facilita\u00e7\u00e3o das rotinas dos membros do sindicato e dos sindicalizados. A aplica\u00e7\u00e3o tem como objetivo centralizar informa\u00e7\u00f5es, simplificar o acesso a servi\u00e7os, e tornar mais eficiente a comunica\u00e7\u00e3o entre o sindicato e seus associados. Este projeto faz parte das disciplinas M\u00e9todos de Desenvolvimento de Software e Engenharia de Produto de Software da Universidade de Bras\u00edlia (UnB) e essa documenta\u00e7\u00e3o se refere ao desenvolvimento do projeto no segundo semestre de 2024. Integrantes da equipe Alunos de Engenharia de Produto de Software Clara Ribeiro Daniela Soares Guilherme Peixoto Alunos de M\u00e9todos de Desenvolvimento de Software Dannyeclisson Rodrigo Eduardo Levenhagem Guilherme Moura \u00cdgor Veras Jo\u00e3o Igor Jorge Henrique Mariana Martins Rodrigo Amaral Yzabella Pimenta","title":"Home"},{"location":"pages/#projeto-sentinela-20242","text":"O Sentinela \u00e9 um projeto criado para o Sindicato dos Policiais do Distrito Federal (SINDPOL-DF) e conta com o desenvolvimento um sistema web focado na facilita\u00e7\u00e3o das rotinas dos membros do sindicato e dos sindicalizados. A aplica\u00e7\u00e3o tem como objetivo centralizar informa\u00e7\u00f5es, simplificar o acesso a servi\u00e7os, e tornar mais eficiente a comunica\u00e7\u00e3o entre o sindicato e seus associados. Este projeto faz parte das disciplinas M\u00e9todos de Desenvolvimento de Software e Engenharia de Produto de Software da Universidade de Bras\u00edlia (UnB) e essa documenta\u00e7\u00e3o se refere ao desenvolvimento do projeto no segundo semestre de 2024.","title":"Projeto Sentinela - 2024.2"},{"location":"pages/#integrantes-da-equipe","text":"","title":"Integrantes da equipe"},{"location":"pages/#alunos-de-engenharia-de-produto-de-software","text":"Clara Ribeiro Daniela Soares Guilherme Peixoto","title":"Alunos de Engenharia de Produto de Software"},{"location":"pages/#alunos-de-metodos-de-desenvolvimento-de-software","text":"Dannyeclisson Rodrigo Eduardo Levenhagem Guilherme Moura \u00cdgor Veras Jo\u00e3o Igor Jorge Henrique Mariana Martins Rodrigo Amaral Yzabella Pimenta","title":"Alunos de M\u00e9todos de Desenvolvimento de Software"},{"location":"pages/%20guia-contribuicao/","text":"Guia de Contribui\u00e7\u00e3o","title":"Guia de Contribui\u00e7\u00e3o"},{"location":"pages/%20guia-contribuicao/#guia-de-contribuicao","text":"","title":"Guia de Contribui\u00e7\u00e3o"},{"location":"pages/projeto/","text":"Acesso ao projeto","title":"Projeto"},{"location":"pages/projeto/#acesso-ao-projeto","text":"","title":"Acesso ao projeto"},{"location":"pages/equipe/agenda-trabalho/","text":"","title":"Agenda de Trabalho"},{"location":"pages/equipe/comunicacao/","text":"","title":"Comunica\u00e7\u00e3o"},{"location":"pages/equipe/dojos/","text":"","title":"Doj\u00f4s"},{"location":"pages/equipe/quadros-conhecimento/","text":"","title":"Quadros de Conhecimento"},{"location":"pages/equipe/quadros-pareamento/","text":"","title":"Quadro de Pareamento"},{"location":"pages/gestao/custo/","text":"Custo","title":"Custo"},{"location":"pages/gestao/custo/#custo","text":"","title":"Custo"},{"location":"pages/gestao/metodologias/","text":"","title":"Metodologias"},{"location":"pages/gestao/qualidade/","text":"Gest\u00e3o de Qualidade","title":"Gest\u00e3o de qualidade"},{"location":"pages/gestao/qualidade/#gestao-de-qualidade","text":"","title":"Gest\u00e3o de Qualidade"},{"location":"pages/gestao/risco/","text":"Gest\u00e3o de Riscos","title":"Gest\u00e3o de risco"},{"location":"pages/gestao/risco/#gestao-de-riscos","text":"","title":"Gest\u00e3o de Riscos"},{"location":"pages/produto/backlog-inicial/","text":"Backlog Inicial","title":"Backlog Inicial"},{"location":"pages/produto/backlog-inicial/#backlog-inicial","text":"","title":"Backlog Inicial"},{"location":"pages/produto/canvas-mvp/","text":"Canvas MVP","title":"Canvas MVP"},{"location":"pages/produto/canvas-mvp/#canvas-mvp","text":"","title":"Canvas MVP"},{"location":"pages/produto/documento-arquitetura/","text":"Arquitetura","title":"Documento de Arquitetura"},{"location":"pages/produto/documento-arquitetura/#arquitetura","text":"","title":"Arquitetura"},{"location":"pages/produto/grafico-gantt/","text":"Gr\u00e1fico Grantt","title":"Gr\u00e1fico de Gantt"},{"location":"pages/produto/grafico-gantt/#grafico-grantt","text":"","title":"Gr\u00e1fico Grantt"},{"location":"pages/produto/historias-usuarios/","text":"Hist\u00f3rias de Usu\u00e1rios","title":"Hist\u00f3rias de Usu\u00e1rios"},{"location":"pages/produto/historias-usuarios/#historias-de-usuarios","text":"","title":"Hist\u00f3rias de Usu\u00e1rios"},{"location":"pages/produto/mapa-rotas/","text":"Mapa de Rotas do Projeto A tabela abaixo descreve as rotas configuradas em um sistema Node.js. Cada rota define o m\u00e9todo HTTP, o endpoint (URI) e a fun\u00e7\u00e3o ou controlador respons\u00e1vel por executar a l\u00f3gica associada. Essa configura\u00e7\u00e3o \u00e9 comum em frameworks como Express.js. Method URI Action GET /api/user userController.getUser GET /client clientController.getAll POST /client clientController.create GET /client/create clientController.showCreate GET /client/:id clientController.getById PUT PATCH /client/:id DELETE /client/:id clientController.deleteById Explica\u00e7\u00e3o de cada rota GET /api/user Descri\u00e7\u00e3o : Obt\u00e9m informa\u00e7\u00f5es do usu\u00e1rio autenticado. A\u00e7\u00e3o : userController.getUser \u00e9 a fun\u00e7\u00e3o que retorna os dados do usu\u00e1rio. GET /client Descri\u00e7\u00e3o : Lista todos os clientes cadastrados. A\u00e7\u00e3o : clientController.getAll retorna a lista completa. POST /client Descri\u00e7\u00e3o : Cria um novo cliente no sistema. A\u00e7\u00e3o : clientController.create executa a l\u00f3gica para adicionar o cliente. GET /client/create Descri\u00e7\u00e3o : Exibe uma interface (ou l\u00f3gica) para criar um novo cliente. A\u00e7\u00e3o : clientController.showCreate apresenta o formul\u00e1rio ou configura\u00e7\u00e3o necess\u00e1ria. GET /client/:id Descri\u00e7\u00e3o : Busca os detalhes de um cliente espec\u00edfico com base no id . A\u00e7\u00e3o : clientController.getById recupera os dados. PUT|PATCH /client/:id Descri\u00e7\u00e3o : Atualiza as informa\u00e7\u00f5es de um cliente espec\u00edfico pelo id . A\u00e7\u00e3o : clientController.updateById realiza a modifica\u00e7\u00e3o. DELETE /client/:id Descri\u00e7\u00e3o : Remove um cliente do sistema com base no id . A\u00e7\u00e3o : clientController.deleteById executa a exclus\u00e3o.","title":"Mapa de rotas"},{"location":"pages/produto/mapa-rotas/#mapa-de-rotas-do-projeto","text":"A tabela abaixo descreve as rotas configuradas em um sistema Node.js. Cada rota define o m\u00e9todo HTTP, o endpoint (URI) e a fun\u00e7\u00e3o ou controlador respons\u00e1vel por executar a l\u00f3gica associada. Essa configura\u00e7\u00e3o \u00e9 comum em frameworks como Express.js. Method URI Action GET /api/user userController.getUser GET /client clientController.getAll POST /client clientController.create GET /client/create clientController.showCreate GET /client/:id clientController.getById PUT PATCH /client/:id DELETE /client/:id clientController.deleteById","title":"Mapa de Rotas do Projeto"},{"location":"pages/produto/mapa-rotas/#explicacao-de-cada-rota","text":"","title":"Explica\u00e7\u00e3o de cada rota"},{"location":"pages/produto/mapa-rotas/#get-apiuser","text":"Descri\u00e7\u00e3o : Obt\u00e9m informa\u00e7\u00f5es do usu\u00e1rio autenticado. A\u00e7\u00e3o : userController.getUser \u00e9 a fun\u00e7\u00e3o que retorna os dados do usu\u00e1rio.","title":"GET /api/user"},{"location":"pages/produto/mapa-rotas/#get-client","text":"Descri\u00e7\u00e3o : Lista todos os clientes cadastrados. A\u00e7\u00e3o : clientController.getAll retorna a lista completa.","title":"GET /client"},{"location":"pages/produto/mapa-rotas/#post-client","text":"Descri\u00e7\u00e3o : Cria um novo cliente no sistema. A\u00e7\u00e3o : clientController.create executa a l\u00f3gica para adicionar o cliente.","title":"POST /client"},{"location":"pages/produto/mapa-rotas/#get-clientcreate","text":"Descri\u00e7\u00e3o : Exibe uma interface (ou l\u00f3gica) para criar um novo cliente. A\u00e7\u00e3o : clientController.showCreate apresenta o formul\u00e1rio ou configura\u00e7\u00e3o necess\u00e1ria.","title":"GET /client/create"},{"location":"pages/produto/mapa-rotas/#get-clientid","text":"Descri\u00e7\u00e3o : Busca os detalhes de um cliente espec\u00edfico com base no id . A\u00e7\u00e3o : clientController.getById recupera os dados.","title":"GET /client/:id"},{"location":"pages/produto/mapa-rotas/#putpatch-clientid","text":"Descri\u00e7\u00e3o : Atualiza as informa\u00e7\u00f5es de um cliente espec\u00edfico pelo id . A\u00e7\u00e3o : clientController.updateById realiza a modifica\u00e7\u00e3o.","title":"PUT|PATCH /client/:id"},{"location":"pages/produto/mapa-rotas/#delete-clientid","text":"Descri\u00e7\u00e3o : Remove um cliente do sistema com base no id . A\u00e7\u00e3o : clientController.deleteById executa a exclus\u00e3o.","title":"DELETE /client/:id"},{"location":"pages/produto/roadmap/","text":"Roadmap","title":"Roadmap"},{"location":"pages/produto/roadmap/#roadmap","text":"","title":"Roadmap"},{"location":"pages/produto/visao-produto/","text":"Vis\u00e3o do produto","title":"Vis\u00e3o do Produto"},{"location":"pages/produto/visao-produto/#visao-do-produto","text":"","title":"Vis\u00e3o do produto"},{"location":"pages/prototipos/alta-fidelidade/","text":"Prot\u00f3tipos de Alta Fidelidade","title":"Alta Fidelidade"},{"location":"pages/prototipos/alta-fidelidade/#prototipos-de-alta-fidelidade","text":"","title":"Prot\u00f3tipos de Alta Fidelidade"}]}