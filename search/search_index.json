{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"pages/","text":"Projeto Sentinela - 2024.2 O Sentinela \u00e9 um projeto criado para o Sindicato dos Policiais do Distrito Federal (SINDPOL-DF) e conta com o desenvolvimento um sistema web focado na facilita\u00e7\u00e3o das rotinas dos membros do sindicato e dos sindicalizados. A aplica\u00e7\u00e3o tem como objetivo centralizar informa\u00e7\u00f5es, simplificar o acesso a servi\u00e7os, e tornar mais eficiente a comunica\u00e7\u00e3o entre o sindicato e seus associados. Este projeto faz parte das disciplinas M\u00e9todos de Desenvolvimento de Software e Engenharia de Produto de Software da Universidade de Bras\u00edlia (UnB) e essa documenta\u00e7\u00e3o se refere ao desenvolvimento do projeto no segundo semestre de 2024. Integrantes da equipe Alunos de Engenharia de Produto de Software Clara Ribeiro Daniela Soares Guilherme Peixoto Alunos de M\u00e9todos de Desenvolvimento de Software Dannyeclisson Rodrigo Eduardo Levenhagem Guilherme Moura \u00cdgor Veras Jo\u00e3o Igor Jorge Henrique Mariana Martins Rodrigo Amaral Yzabella Pimenta Hist\u00f3rico de Vers\u00f5es Vers\u00e3o Nome da Vers\u00e3o Data Respons\u00e1vel Descri\u00e7\u00e3o/Altera\u00e7\u00f5es 1.0 Cria\u00e7\u00e3o do documento 11/11/2024 Clara Marcelino Cria\u00e7\u00e3o inicial do projeto e da p\u00e1gina inicial.","title":"Home"},{"location":"pages/#projeto-sentinela-20242","text":"O Sentinela \u00e9 um projeto criado para o Sindicato dos Policiais do Distrito Federal (SINDPOL-DF) e conta com o desenvolvimento um sistema web focado na facilita\u00e7\u00e3o das rotinas dos membros do sindicato e dos sindicalizados. A aplica\u00e7\u00e3o tem como objetivo centralizar informa\u00e7\u00f5es, simplificar o acesso a servi\u00e7os, e tornar mais eficiente a comunica\u00e7\u00e3o entre o sindicato e seus associados. Este projeto faz parte das disciplinas M\u00e9todos de Desenvolvimento de Software e Engenharia de Produto de Software da Universidade de Bras\u00edlia (UnB) e essa documenta\u00e7\u00e3o se refere ao desenvolvimento do projeto no segundo semestre de 2024.","title":"Projeto Sentinela - 2024.2"},{"location":"pages/#integrantes-da-equipe","text":"","title":"Integrantes da equipe"},{"location":"pages/#alunos-de-engenharia-de-produto-de-software","text":"Clara Ribeiro Daniela Soares Guilherme Peixoto","title":"Alunos de Engenharia de Produto de Software"},{"location":"pages/#alunos-de-metodos-de-desenvolvimento-de-software","text":"Dannyeclisson Rodrigo Eduardo Levenhagem Guilherme Moura \u00cdgor Veras Jo\u00e3o Igor Jorge Henrique Mariana Martins Rodrigo Amaral Yzabella Pimenta","title":"Alunos de M\u00e9todos de Desenvolvimento de Software"},{"location":"pages/#historico-de-versoes","text":"Vers\u00e3o Nome da Vers\u00e3o Data Respons\u00e1vel Descri\u00e7\u00e3o/Altera\u00e7\u00f5es 1.0 Cria\u00e7\u00e3o do documento 11/11/2024 Clara Marcelino Cria\u00e7\u00e3o inicial do projeto e da p\u00e1gina inicial.","title":"Hist\u00f3rico de Vers\u00f5es"},{"location":"pages/guia-contribuicao/","text":"Guia de Contribui\u00e7\u00e3o","title":"Guia de Contribui\u00e7\u00e3o"},{"location":"pages/guia-contribuicao/#guia-de-contribuicao","text":"","title":"Guia de Contribui\u00e7\u00e3o"},{"location":"pages/projeto/","text":"Configura\u00e7\u00e3o do Projeto Este sistema foi desenvolvido com uma arquitetura de microsservi\u00e7os, composta por quatro reposit\u00f3rios principais, cada um com um prop\u00f3sito espec\u00edfico: Front-End : Interface gr\u00e1fica do usu\u00e1rio, permitindo acesso e intera\u00e7\u00e3o com as funcionalidades do sistema. API de Usu\u00e1rios : Respons\u00e1vel pela gest\u00e3o de dados de usu\u00e1rios, incluindo autentica\u00e7\u00e3o e controle de acessos. API de Benef\u00edcios : Gerencia informa\u00e7\u00f5es relacionadas a benef\u00edcios, como cadastros. API de Financeiro : Gerencia informa\u00e7\u00f5es relacionadas aos tr\u00e2mites financeiros, como gera\u00e7\u00e3o de relat\u00f3rios de gastos. Esta p\u00e1gina foi criada para facilitar a configura\u00e7\u00e3o e execu\u00e7\u00e3o do projeto localmente. Cada se\u00e7\u00e3o fornece instru\u00e7\u00f5es detalhadas para rodar cada reposit\u00f3rio, incluindo: Pr\u00e9-requisitos : Ferramentas e depend\u00eancias necess\u00e1rias. Configura\u00e7\u00e3o : Passos para instalar depend\u00eancias, configurar vari\u00e1veis de ambiente e preparar o ambiente local. Execu\u00e7\u00e3o : Comandos e dicas para iniciar o servi\u00e7o e verificar se ele est\u00e1 funcionando corretamente. Pr\u00e9-requisitos Antes de iniciar a configura\u00e7\u00e3o do projeto localmente, certifique-se de que os seguintes pr\u00e9-requisitos est\u00e3o instalados em sua m\u00e1quina: 1. Git O Git \u00e9 essencial para clonar os reposit\u00f3rios e gerenciar o controle de vers\u00e3o do c\u00f3digo. Instala\u00e7\u00e3o : No Windows: Baixe aqui e siga as instru\u00e7\u00f5es do instalador. No macOS: Utilize o Homebrew com o comando: bash brew install git No Linux (Debian/Ubuntu): bash sudo apt update && sudo apt install git Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash git --version 2. Docker O Docker \u00e9 usado para criar, gerenciar e executar containers, que s\u00e3o essenciais para rodar os microsservi\u00e7os de maneira isolada. Instala\u00e7\u00e3o : Acesse Docker Desktop e siga as instru\u00e7\u00f5es de instala\u00e7\u00e3o. No Linux: bash sudo apt update sudo apt install docker.io Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash docker --version 3. Docker Compose O Docker Compose facilita o gerenciamento de m\u00faltiplos containers. Instala\u00e7\u00e3o : Docker Compose geralmente vem incluso no Docker Desktop. Caso seja necess\u00e1rio instalar manualmente, siga as instru\u00e7\u00f5es da documenta\u00e7\u00e3o oficial . No Linux: bash sudo curl -L \"https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d '\"' -f4)/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash docker-compose --version 4. Node.js O Node.js \u00e9 necess\u00e1rio para executar scripts JavaScript no lado do servidor e instalar depend\u00eancias do Front-End. Instala\u00e7\u00e3o : Baixe a vers\u00e3o LTS do site oficial . No macOS/Linux, use o nvm (Node Version Manager): bash curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash source ~/.bashrc nvm install --lts Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash node --version npm --version Configura\u00e7\u00e3o Ap\u00f3s garantir que os pr\u00e9-requisitos est\u00e3o atendidos, siga os passos abaixo para configurar o projeto localmente: 1. Clonar os reposit\u00f3rios O projeto \u00e9 composto por quatro reposit\u00f3rios principais. Clone cada um deles utilizando os comandos abaixo: Front-End : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-FRONT.git API de Usu\u00e1rios : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-BACKEND-USUARIOS.git API de Benef\u00edcios : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-BACKEND-BENEFICIOS.git API de Financeiro : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-BACKEND-FINANCEIRO.git Ap\u00f3s clonar os reposit\u00f3rios, navegue at\u00e9 cada pasta para continuar a configura\u00e7\u00e3o. 2. Configurar as vari\u00e1veis de ambiente Os reposit\u00f3rios de Usu\u00e1rios , Benef\u00edcios e Financeiro requerem um arquivo .env com as vari\u00e1veis de ambiente necess\u00e1rias para o funcionamento do projeto. Crie um arquivo .env em cada um dos reposit\u00f3rios, seguindo esse modelo: MONGO_URI= MONGO_INITDB_ROOT_USERNAME= NODE_ENV= MONGO_INITDB_ROOT_PASSWORD= DB_HOST= PORT= 3. Instale as depend\u00eancias no front No reposit\u00f3rio de front end n\u00e3o precisamos configurar as vari\u00e1veis de ambiente, mas devemos instalar as depend\u00eancias do projeto. Para fazer isso, basta entrar na pasta raiz do projeto e rodar o comando: npm install Execu\u00e7\u00e3o Para conseguir rodar o projeto em sua totalidade localmente, voc\u00ea dever\u00e1 rodar os reposit\u00f3rios de Usu\u00e1rios , Benef\u00edcios e Financeiro usando docker e o reposit\u00f3rio de Front-End usando o npm. 1. Rodando os reposit\u00f3rios de back-end Para cada um dos reposit\u00f3rios de back-end, entre na pasta raiz e execute: docker-compose up --build Se voc\u00ea estiver usando o Docker Desktop, ser\u00e1 necess\u00e1rio inicializ\u00e1-lo primeiro. 2. Rodando o reposit\u00f3rio de front-end Para o reposit\u00f3rio de front-end, \u00e9 necess\u00e1rio executar o comando: npm run dev Seguindo esses passos voc\u00ea ser\u00e1 capaz de rodar o projeto Sentinelas localmente! Hist\u00f3rico de Vers\u00f5es Vers\u00e3o Nome da Vers\u00e3o Data Respons\u00e1vel Descri\u00e7\u00e3o/Altera\u00e7\u00f5es 1.0 Cria\u00e7\u00e3o do documento 07/12/2024 Clara Marcelino Cria\u00e7\u00e3o do documento de configura\u00e7\u00e3o do projeto","title":"Projeto"},{"location":"pages/projeto/#configuracao-do-projeto","text":"Este sistema foi desenvolvido com uma arquitetura de microsservi\u00e7os, composta por quatro reposit\u00f3rios principais, cada um com um prop\u00f3sito espec\u00edfico: Front-End : Interface gr\u00e1fica do usu\u00e1rio, permitindo acesso e intera\u00e7\u00e3o com as funcionalidades do sistema. API de Usu\u00e1rios : Respons\u00e1vel pela gest\u00e3o de dados de usu\u00e1rios, incluindo autentica\u00e7\u00e3o e controle de acessos. API de Benef\u00edcios : Gerencia informa\u00e7\u00f5es relacionadas a benef\u00edcios, como cadastros. API de Financeiro : Gerencia informa\u00e7\u00f5es relacionadas aos tr\u00e2mites financeiros, como gera\u00e7\u00e3o de relat\u00f3rios de gastos. Esta p\u00e1gina foi criada para facilitar a configura\u00e7\u00e3o e execu\u00e7\u00e3o do projeto localmente. Cada se\u00e7\u00e3o fornece instru\u00e7\u00f5es detalhadas para rodar cada reposit\u00f3rio, incluindo: Pr\u00e9-requisitos : Ferramentas e depend\u00eancias necess\u00e1rias. Configura\u00e7\u00e3o : Passos para instalar depend\u00eancias, configurar vari\u00e1veis de ambiente e preparar o ambiente local. Execu\u00e7\u00e3o : Comandos e dicas para iniciar o servi\u00e7o e verificar se ele est\u00e1 funcionando corretamente.","title":"Configura\u00e7\u00e3o do Projeto"},{"location":"pages/projeto/#pre-requisitos","text":"Antes de iniciar a configura\u00e7\u00e3o do projeto localmente, certifique-se de que os seguintes pr\u00e9-requisitos est\u00e3o instalados em sua m\u00e1quina:","title":"Pr\u00e9-requisitos"},{"location":"pages/projeto/#1-git","text":"O Git \u00e9 essencial para clonar os reposit\u00f3rios e gerenciar o controle de vers\u00e3o do c\u00f3digo. Instala\u00e7\u00e3o : No Windows: Baixe aqui e siga as instru\u00e7\u00f5es do instalador. No macOS: Utilize o Homebrew com o comando: bash brew install git No Linux (Debian/Ubuntu): bash sudo apt update && sudo apt install git Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash git --version","title":"1. Git"},{"location":"pages/projeto/#2-docker","text":"O Docker \u00e9 usado para criar, gerenciar e executar containers, que s\u00e3o essenciais para rodar os microsservi\u00e7os de maneira isolada. Instala\u00e7\u00e3o : Acesse Docker Desktop e siga as instru\u00e7\u00f5es de instala\u00e7\u00e3o. No Linux: bash sudo apt update sudo apt install docker.io Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash docker --version","title":"2. Docker"},{"location":"pages/projeto/#3-docker-compose","text":"O Docker Compose facilita o gerenciamento de m\u00faltiplos containers. Instala\u00e7\u00e3o : Docker Compose geralmente vem incluso no Docker Desktop. Caso seja necess\u00e1rio instalar manualmente, siga as instru\u00e7\u00f5es da documenta\u00e7\u00e3o oficial . No Linux: bash sudo curl -L \"https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d '\"' -f4)/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash docker-compose --version","title":"3. Docker Compose"},{"location":"pages/projeto/#4-nodejs","text":"O Node.js \u00e9 necess\u00e1rio para executar scripts JavaScript no lado do servidor e instalar depend\u00eancias do Front-End. Instala\u00e7\u00e3o : Baixe a vers\u00e3o LTS do site oficial . No macOS/Linux, use o nvm (Node Version Manager): bash curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash source ~/.bashrc nvm install --lts Verifica\u00e7\u00e3o da instala\u00e7\u00e3o : bash node --version npm --version","title":"4. Node.js"},{"location":"pages/projeto/#configuracao","text":"Ap\u00f3s garantir que os pr\u00e9-requisitos est\u00e3o atendidos, siga os passos abaixo para configurar o projeto localmente:","title":"Configura\u00e7\u00e3o"},{"location":"pages/projeto/#1-clonar-os-repositorios","text":"O projeto \u00e9 composto por quatro reposit\u00f3rios principais. Clone cada um deles utilizando os comandos abaixo: Front-End : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-FRONT.git API de Usu\u00e1rios : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-BACKEND-USUARIOS.git API de Benef\u00edcios : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-BACKEND-BENEFICIOS.git API de Financeiro : git clone https://github.com/fga-eps-mds/2024.2-SENTINELA-BACKEND-FINANCEIRO.git Ap\u00f3s clonar os reposit\u00f3rios, navegue at\u00e9 cada pasta para continuar a configura\u00e7\u00e3o.","title":"1. Clonar os reposit\u00f3rios"},{"location":"pages/projeto/#2-configurar-as-variaveis-de-ambiente","text":"Os reposit\u00f3rios de Usu\u00e1rios , Benef\u00edcios e Financeiro requerem um arquivo .env com as vari\u00e1veis de ambiente necess\u00e1rias para o funcionamento do projeto. Crie um arquivo .env em cada um dos reposit\u00f3rios, seguindo esse modelo: MONGO_URI= MONGO_INITDB_ROOT_USERNAME= NODE_ENV= MONGO_INITDB_ROOT_PASSWORD= DB_HOST= PORT=","title":"2. Configurar as vari\u00e1veis de ambiente"},{"location":"pages/projeto/#3-instale-as-dependencias-no-front","text":"No reposit\u00f3rio de front end n\u00e3o precisamos configurar as vari\u00e1veis de ambiente, mas devemos instalar as depend\u00eancias do projeto. Para fazer isso, basta entrar na pasta raiz do projeto e rodar o comando: npm install","title":"3. Instale as depend\u00eancias no front"},{"location":"pages/projeto/#execucao","text":"Para conseguir rodar o projeto em sua totalidade localmente, voc\u00ea dever\u00e1 rodar os reposit\u00f3rios de Usu\u00e1rios , Benef\u00edcios e Financeiro usando docker e o reposit\u00f3rio de Front-End usando o npm.","title":"Execu\u00e7\u00e3o"},{"location":"pages/projeto/#1-rodando-os-repositorios-de-back-end","text":"Para cada um dos reposit\u00f3rios de back-end, entre na pasta raiz e execute: docker-compose up --build Se voc\u00ea estiver usando o Docker Desktop, ser\u00e1 necess\u00e1rio inicializ\u00e1-lo primeiro.","title":"1. Rodando os reposit\u00f3rios de back-end"},{"location":"pages/projeto/#2-rodando-o-repositorio-de-front-end","text":"Para o reposit\u00f3rio de front-end, \u00e9 necess\u00e1rio executar o comando: npm run dev Seguindo esses passos voc\u00ea ser\u00e1 capaz de rodar o projeto Sentinelas localmente!","title":"2. Rodando o reposit\u00f3rio de front-end"},{"location":"pages/projeto/#historico-de-versoes","text":"Vers\u00e3o Nome da Vers\u00e3o Data Respons\u00e1vel Descri\u00e7\u00e3o/Altera\u00e7\u00f5es 1.0 Cria\u00e7\u00e3o do documento 07/12/2024 Clara Marcelino Cria\u00e7\u00e3o do documento de configura\u00e7\u00e3o do projeto","title":"Hist\u00f3rico de Vers\u00f5es"},{"location":"pages/equipe/agenda-trabalho/","text":"","title":"Agenda de Trabalho"},{"location":"pages/equipe/comunicacao/","text":"","title":"Comunica\u00e7\u00e3o"},{"location":"pages/equipe/dojos/","text":"","title":"Doj\u00f4s"},{"location":"pages/equipe/quadros-conhecimento/","text":"","title":"Quadros de Conhecimento"},{"location":"pages/equipe/quadros-pareamento/","text":"","title":"Quadro de Pareamento"},{"location":"pages/gestao/custo/","text":"Custo","title":"Custo"},{"location":"pages/gestao/custo/#custo","text":"","title":"Custo"},{"location":"pages/gestao/metodologias/","text":"","title":"Metodologias"},{"location":"pages/gestao/qualidade/","text":"Gest\u00e3o de Qualidade","title":"Gest\u00e3o de qualidade"},{"location":"pages/gestao/qualidade/#gestao-de-qualidade","text":"","title":"Gest\u00e3o de Qualidade"},{"location":"pages/gestao/risco/","text":"Gest\u00e3o de Riscos","title":"Gest\u00e3o de risco"},{"location":"pages/gestao/risco/#gestao-de-riscos","text":"","title":"Gest\u00e3o de Riscos"},{"location":"pages/produto/backlog-inicial/","text":"Backlog Inicial","title":"Backlog Inicial"},{"location":"pages/produto/backlog-inicial/#backlog-inicial","text":"","title":"Backlog Inicial"},{"location":"pages/produto/canvas-mvp/","text":"Canvas MVP","title":"Canvas MVP"},{"location":"pages/produto/canvas-mvp/#canvas-mvp","text":"","title":"Canvas MVP"},{"location":"pages/produto/documento-arquitetura/","text":"Arquitetura","title":"Documento de Arquitetura"},{"location":"pages/produto/documento-arquitetura/#arquitetura","text":"","title":"Arquitetura"},{"location":"pages/produto/grafico-gantt/","text":"Gr\u00e1fico Grantt","title":"Gr\u00e1fico de Gantt"},{"location":"pages/produto/grafico-gantt/#grafico-grantt","text":"","title":"Gr\u00e1fico Grantt"},{"location":"pages/produto/historias-usuarios/","text":"Hist\u00f3rias de Usu\u00e1rios","title":"Hist\u00f3rias de Usu\u00e1rios"},{"location":"pages/produto/historias-usuarios/#historias-de-usuarios","text":"","title":"Hist\u00f3rias de Usu\u00e1rios"},{"location":"pages/produto/mapa-rotas/","text":"Mapa de Rotas do Projeto A tabela abaixo descreve as rotas configuradas em um sistema Node.js. Cada rota define o m\u00e9todo HTTP, o endpoint (URI) e a fun\u00e7\u00e3o ou controlador respons\u00e1vel por executar a l\u00f3gica associada. Essa configura\u00e7\u00e3o \u00e9 comum em frameworks como Express.js. Method URI Action GET /api/user userController.getUser GET /client clientController.getAll POST /client clientController.create GET /client/create clientController.showCreate GET /client/:id clientController.getById PUT PATCH /client/:id DELETE /client/:id clientController.deleteById Explica\u00e7\u00e3o de cada rota GET /api/user Descri\u00e7\u00e3o : Obt\u00e9m informa\u00e7\u00f5es do usu\u00e1rio autenticado. A\u00e7\u00e3o : userController.getUser \u00e9 a fun\u00e7\u00e3o que retorna os dados do usu\u00e1rio. GET /client Descri\u00e7\u00e3o : Lista todos os clientes cadastrados. A\u00e7\u00e3o : clientController.getAll retorna a lista completa. POST /client Descri\u00e7\u00e3o : Cria um novo cliente no sistema. A\u00e7\u00e3o : clientController.create executa a l\u00f3gica para adicionar o cliente. GET /client/create Descri\u00e7\u00e3o : Exibe uma interface (ou l\u00f3gica) para criar um novo cliente. A\u00e7\u00e3o : clientController.showCreate apresenta o formul\u00e1rio ou configura\u00e7\u00e3o necess\u00e1ria. GET /client/:id Descri\u00e7\u00e3o : Busca os detalhes de um cliente espec\u00edfico com base no id . A\u00e7\u00e3o : clientController.getById recupera os dados. PUT|PATCH /client/:id Descri\u00e7\u00e3o : Atualiza as informa\u00e7\u00f5es de um cliente espec\u00edfico pelo id . A\u00e7\u00e3o : clientController.updateById realiza a modifica\u00e7\u00e3o. DELETE /client/:id Descri\u00e7\u00e3o : Remove um cliente do sistema com base no id . A\u00e7\u00e3o : clientController.deleteById executa a exclus\u00e3o.","title":"Mapa de rotas"},{"location":"pages/produto/mapa-rotas/#mapa-de-rotas-do-projeto","text":"A tabela abaixo descreve as rotas configuradas em um sistema Node.js. Cada rota define o m\u00e9todo HTTP, o endpoint (URI) e a fun\u00e7\u00e3o ou controlador respons\u00e1vel por executar a l\u00f3gica associada. Essa configura\u00e7\u00e3o \u00e9 comum em frameworks como Express.js. Method URI Action GET /api/user userController.getUser GET /client clientController.getAll POST /client clientController.create GET /client/create clientController.showCreate GET /client/:id clientController.getById PUT PATCH /client/:id DELETE /client/:id clientController.deleteById","title":"Mapa de Rotas do Projeto"},{"location":"pages/produto/mapa-rotas/#explicacao-de-cada-rota","text":"","title":"Explica\u00e7\u00e3o de cada rota"},{"location":"pages/produto/mapa-rotas/#get-apiuser","text":"Descri\u00e7\u00e3o : Obt\u00e9m informa\u00e7\u00f5es do usu\u00e1rio autenticado. A\u00e7\u00e3o : userController.getUser \u00e9 a fun\u00e7\u00e3o que retorna os dados do usu\u00e1rio.","title":"GET /api/user"},{"location":"pages/produto/mapa-rotas/#get-client","text":"Descri\u00e7\u00e3o : Lista todos os clientes cadastrados. A\u00e7\u00e3o : clientController.getAll retorna a lista completa.","title":"GET /client"},{"location":"pages/produto/mapa-rotas/#post-client","text":"Descri\u00e7\u00e3o : Cria um novo cliente no sistema. A\u00e7\u00e3o : clientController.create executa a l\u00f3gica para adicionar o cliente.","title":"POST /client"},{"location":"pages/produto/mapa-rotas/#get-clientcreate","text":"Descri\u00e7\u00e3o : Exibe uma interface (ou l\u00f3gica) para criar um novo cliente. A\u00e7\u00e3o : clientController.showCreate apresenta o formul\u00e1rio ou configura\u00e7\u00e3o necess\u00e1ria.","title":"GET /client/create"},{"location":"pages/produto/mapa-rotas/#get-clientid","text":"Descri\u00e7\u00e3o : Busca os detalhes de um cliente espec\u00edfico com base no id . A\u00e7\u00e3o : clientController.getById recupera os dados.","title":"GET /client/:id"},{"location":"pages/produto/mapa-rotas/#putpatch-clientid","text":"Descri\u00e7\u00e3o : Atualiza as informa\u00e7\u00f5es de um cliente espec\u00edfico pelo id . A\u00e7\u00e3o : clientController.updateById realiza a modifica\u00e7\u00e3o.","title":"PUT|PATCH /client/:id"},{"location":"pages/produto/mapa-rotas/#delete-clientid","text":"Descri\u00e7\u00e3o : Remove um cliente do sistema com base no id . A\u00e7\u00e3o : clientController.deleteById executa a exclus\u00e3o.","title":"DELETE /client/:id"},{"location":"pages/produto/roadmap/","text":"Roadmap","title":"Roadmap"},{"location":"pages/produto/roadmap/#roadmap","text":"","title":"Roadmap"},{"location":"pages/produto/visao-produto/","text":"Vis\u00e3o do produto","title":"Vis\u00e3o do Produto"},{"location":"pages/produto/visao-produto/#visao-do-produto","text":"","title":"Vis\u00e3o do produto"},{"location":"pages/prototipos/alta-fidelidade/","text":"Prot\u00f3tipos de Alta Fidelidade","title":"Alta Fidelidade"},{"location":"pages/prototipos/alta-fidelidade/#prototipos-de-alta-fidelidade","text":"","title":"Prot\u00f3tipos de Alta Fidelidade"}]}